#! /bin/bash


echo 'Do not run this! This is just a place to copy and paste commands that have been used to start experiments'
exit 1


##########################
# Transfer experiments
##########################

for split in 0 1 2 3; do
    for layer in 1 2 3 4 5 6 7; do
        resman -r transfer${split}A${split}B_1_$layer ./create_run_dir_transfer ../../data/ilsvrc12/data/half${split}B_train/leveldb ../../data/ilsvrc12/data/half${split}B_valid/leveldb ../../data/ilsvrc12/data/half${split}A_train/mean.binaryproto results/*half${split}A/
        sleep 2
        resman -r transfer${split}B${split}A_1_$layer ./create_run_dir_transfer ../../data/ilsvrc12/data/half${split}A_train/leveldb ../../data/ilsvrc12/data/half${split}A_valid/leveldb ../../data/ilsvrc12/data/half${split}B_train/mean.binaryproto results/*half${split}B/
        sleep 2
        resman -r transfer${split}A${split}A_1_$layer ./create_run_dir_transfer ../../data/ilsvrc12/data/half${split}A_train/leveldb ../../data/ilsvrc12/data/half${split}A_valid/leveldb ../../data/ilsvrc12/data/half${split}A_train/mean.binaryproto results/*half${split}A/
        sleep 2
        resman -r transfer${split}B${split}B_1_$layer ./create_run_dir_transfer ../../data/ilsvrc12/data/half${split}B_train/leveldb ../../data/ilsvrc12/data/half${split}B_valid/leveldb ../../data/ilsvrc12/data/half${split}B_train/mean.binaryproto results/*half${split}B/
        sleep 2
    done
done

for dir in results/*transfer*_1_*; do
    echo $dir
    cd $dir
    ./0_cpln_data
    cd -
done

# edit imagenet_train.prototxt  to      set lr and weight decay to 0 for layer 1, then run
for dir in results/*transfer*_1_1; do cp -v imagenet_train.prototxt $dir/; done
# edit imagenet_train.prototxt  to also set lr and weight decay to 0 for layer 2, then run
for dir in results/*transfer*_1_2; do cp -v imagenet_train.prototxt $dir/; done
# edit imagenet_train.prototxt  to also set lr and weight decay to 0 for layer 3, then run
for dir in results/*transfer*_1_3; do cp -v imagenet_train.prototxt $dir/; done
# etc....


perl -p -i -e 's/conv2/conv2-new/g' results/*transfer*_1_1/imagenet_{train,val}.prototxt
perl -p -i -e 's/conv3/conv3-new/g' results/*transfer*_1_[1-2]/imagenet_{train,val}.prototxt
perl -p -i -e 's/conv4/conv4-new/g' results/*transfer*_1_[1-3]/imagenet_{train,val}.prototxt
perl -p -i -e 's/conv5/conv5-new/g' results/*transfer*_1_[1-4]/imagenet_{train,val}.prototxt
perl -p -i -e 's/fc6/fc6-new/g'     results/*transfer*_1_[1-5]/imagenet_{train,val}.prototxt
perl -p -i -e 's/fc7/fc7-new/g'     results/*transfer*_1_[1-6]/imagenet_{train,val}.prototxt
perl -p -i -e 's/fc8/fc8-new/g'     results/*transfer*_1_[1-7]/imagenet_{train,val}.prototxt




##########################
# [2014-05-07 11:32:25 am] 
# Transfer-ft experiments
##########################

for split in 0 1 2 3; do
    for layer in 1 2 3 4 5 6 7; do
        resman -r transfer-ft${split}A${split}B_1_$layer ./create_run_dir_transfer ../../data/ilsvrc12/data/half${split}B_train/leveldb ../../data/ilsvrc12/data/half${split}B_valid/leveldb ../../data/ilsvrc12/data/half${split}A_train/mean.binaryproto results/*half${split}A/
        sleep 2
        resman -r transfer-ft${split}B${split}A_1_$layer ./create_run_dir_transfer ../../data/ilsvrc12/data/half${split}A_train/leveldb ../../data/ilsvrc12/data/half${split}A_valid/leveldb ../../data/ilsvrc12/data/half${split}B_train/mean.binaryproto results/*half${split}B/
        sleep 2
        resman -r transfer-ft${split}A${split}A_1_$layer ./create_run_dir_transfer ../../data/ilsvrc12/data/half${split}A_train/leveldb ../../data/ilsvrc12/data/half${split}A_valid/leveldb ../../data/ilsvrc12/data/half${split}A_train/mean.binaryproto results/*half${split}A/
        sleep 2
        #resman -r transfer-ft${split}B${split}B_1_$layer ./create_run_dir_transfer ../../data/ilsvrc12/data/half${split}B_train/leveldb ../../data/ilsvrc12/data/half${split}B_valid/leveldb ../../data/ilsvrc12/data/half${split}B_train/mean.binaryproto results/*half${split}B/
        #sleep 2
    done
done

for dir in results/*transfer-ft*_1_*; do
    echo $dir
    cd $dir
    ./0_cpln_data
    cd -
done

# Because we're finetuning the networks, we leave all lr and weight
# decays at their original values! So just run:
for dir in results/*transfer-ft*_1_*; do cp -v imagenet_train.prototxt $dir/; done

perl -p -i -e 's/conv2/conv2-new/g' results/*transfer-ft*_1_1/imagenet_{train,val}.prototxt
perl -p -i -e 's/conv3/conv3-new/g' results/*transfer-ft*_1_[1-2]/imagenet_{train,val}.prototxt
perl -p -i -e 's/conv4/conv4-new/g' results/*transfer-ft*_1_[1-3]/imagenet_{train,val}.prototxt
perl -p -i -e 's/conv5/conv5-new/g' results/*transfer-ft*_1_[1-4]/imagenet_{train,val}.prototxt
perl -p -i -e 's/fc6/fc6-new/g'     results/*transfer-ft*_1_[1-5]/imagenet_{train,val}.prototxt
perl -p -i -e 's/fc7/fc7-new/g'     results/*transfer-ft*_1_[1-6]/imagenet_{train,val}.prototxt
perl -p -i -e 's/fc8/fc8-new/g'     results/*transfer-ft*_1_[1-7]/imagenet_{train,val}.prototxt
